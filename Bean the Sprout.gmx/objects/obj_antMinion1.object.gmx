<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_antMinion1_left</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setting Minion Variables
hsp = 0;
vsp = 0;
grav = 0.75;
dir = -1;
movespeed = 2;
fearofheights = false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Minion Controls
hsp = dir * movespeed;
vsp += grav;
image_speed = 0.4;

//Gravity
vsp += grav;

//Horizontal Collisions for wall only
if(place_meeting(x + hsp, y, obj_ground1)){
    while(!place_meeting( x + sign(hsp), y, obj_ground1)) x += sign(hsp);
    hsp=0;
    dir *= -1;
    if(dir == 1) sprite_index = spr_antMinion1_right;
    else sprite_index = spr_antMinion1_left;
}

// Horizontal Collision for monsterStop Object
if (place_meeting(x + hsp, y, obj_monsterStop)) {
    dir *= -1;
    if(dir == 1) sprite_index = spr_antMinion1_right;
    else sprite_index = spr_antMinion1_left;
}


//Vertical Collisions
if(place_meeting(x, y + vsp, obj_ground1)){
    while(!place_meeting(x, y + sign(vsp), obj_ground1)) y += sign(vsp);
    //if(sign(vsp) == 1){ grounded = true; }
    vsp = 0;
    
    if((fearofheights) &amp;&amp; (!position_meeting( x + (sprite_width /2 ) * dir, y + (sprite_height / 2) + 8, obj_ground1))){
        dir *= -1;
        if(dir == 1) sprite_index = spr_antMinion1_right;
        else sprite_index = spr_antMinion1_left;
    }
}

//Minion Collision
if(place_meeting(x, y, obj_bean)){
    if(obj_bean.y &lt; y - 16){ // jump on top of the ant
        instance_destroy();
    } else {
        audio_play_sound(snd_beanHit, 0, 0); 
    }
}

//Finalize Horizontal
x += hsp;

//Finalize Vertical
y += vsp;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
